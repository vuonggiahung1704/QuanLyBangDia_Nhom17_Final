package gui_danhMuc;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import dao.Dia_DAO;
import dao.TaiKhoan_DAO;
import dao.TheLoai_DAO;
import dao.TieuDe_DAO;
import database.Database;
import entities.Dia;
import entities.TaiKhoan;
import entities.TheLoai;
import entities.TieuDe;
import gui_main.Main;

import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.HeadlessException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nmrhu
 */
public class Dia_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form TaiKhoan
	 */
	public Dia_Gui() {
		setSize(new Dimension(1500, 700));

		initComponents();

		DocDuLieuDatabaseVaoTable("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qltd = new TieuDe_DAO();
		qldia = new Dia_DAO();
		qltl = new TheLoai_DAO();

		jPanel2 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableDia = new javax.swing.JTable();
		btnThem1 = new javax.swing.JButton();
		btnTim = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel2.setFont(new Font("Tahoma", Font.PLAIN, 28));
		jLabel1 = new javax.swing.JLabel();
		jLabel1.setFont(new Font("Tahoma", Font.PLAIN, 28));

		setBackground(new java.awt.Color(255, 255, 255));

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));
		jPanel2.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		jTableDia.setRowHeight(40);
		jTableDia.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jTableDia.setFont(new java.awt.Font("Times New Roman", 0, 26)); // NOI18N
		dm = new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã đĩa", "Tên đĩa", "Thể loại", "Tình trạng", "Hư hỏng" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		};
		jTableDia.setModel(dm);
		jTableDia.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				ChiTietDia();
			}
		});
		jScrollPane1.setViewportView(jTableDia);
		jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		btnThem1.setBackground(new java.awt.Color(0, 153, 255));
		btnThem1.setForeground(new java.awt.Color(255, 255, 255));
		btnThem1.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\add_30px.png")); // NOI18N
		btnThem1.setText("Thêm mới");
		btnThem1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				Dia_Dialog dialog = new Dia_Dialog(main, true);
				dialog.setLocationRelativeTo(main);
				dialog.setVisible(true);
				dialog.setTitle("Thêm đĩa");
			}
		});

		btnTim.setBackground(new java.awt.Color(0, 153, 255));
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\search_30px.png")); // NOI18N
		btnTim.setText("Tìm kiếm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				String txt = txtTim.getText().toString();
				DocDuLieuDatabaseVaoTable(txt);
			}
		});

		btnXoa.setBackground(new java.awt.Color(255, 51, 51));
		btnXoa.setForeground(new java.awt.Color(255, 255, 255));
		btnXoa.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\delete_30px.png")); // NOI18N
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				if (dia == null) {
					JOptionPane.showMessageDialog(null, "Chọn đĩa cần xóa");
				} else {
					XoaDia(dia);
					dia = null;
				}
			}
		});

		jLabel2.setForeground(new java.awt.Color(102, 102, 102));
		jLabel2.setText("/ Đĩa");

		jLabel1.setForeground(new java.awt.Color(51, 153, 255));
		jLabel1.setText("Danh mục");

		txtTim = new JTextField();
		txtTim.setColumns(10);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(20)
						.addGroup(layout.createParallelGroup(Alignment.LEADING).addGroup(layout.createSequentialGroup()
								.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 145, GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
								.addContainerGap(1235, Short.MAX_VALUE))
								.addGroup(layout.createSequentialGroup().addGroup(layout
										.createParallelGroup(Alignment.TRAILING)
										.addComponent(jPanel2, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 1465,
												Short.MAX_VALUE)
										.addGroup(layout.createSequentialGroup()
												.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, 361,
														GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.RELATED)
												.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 150,
														GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.RELATED, 636, Short.MAX_VALUE)
												.addComponent(btnThem1, GroupLayout.PREFERRED_SIZE, 150,
														GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(ComponentPlacement.RELATED).addComponent(btnXoa,
														GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)))
										.addContainerGap()))));
		layout.setVerticalGroup(layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addGap(10)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE))
						.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addGroup(layout.createParallelGroup(Alignment.BASELINE)
										.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 40,
												GroupLayout.PREFERRED_SIZE)
										.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
												GroupLayout.PREFERRED_SIZE))
								.addGroup(layout.createParallelGroup(Alignment.BASELINE).addComponent(btnXoa)
										.addComponent(btnThem1, GroupLayout.PREFERRED_SIZE, 40,
												GroupLayout.PREFERRED_SIZE)))
						.addPreferredGap(ComponentPlacement.RELATED)
						.addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE).addContainerGap()));
		this.setLayout(layout);
	}// </editor-fold>//GEN-END:initComponents

	public void DocDuLieuDatabaseVaoTable(String txt) {
		dm = (DefaultTableModel) jTableDia.getModel();
		dm.setRowCount(0);
		List<Dia> list = new ArrayList<Dia>();
		qldia = new Dia_DAO();

		if (txt.equals(""))
			list = qldia.dsDia();
		else
			list = qldia.tim_Dia(txt);

		if (list.size() == 0) {
			JOptionPane.showMessageDialog(null, "Không tìm thấy");
		}

		for (Dia d : list) {
			TieuDe td = qltd.chiTietTieuDe(d.getTieuDe().getMaTD());
			TheLoai tl = qltl.chiTietTheLoai(d.getTheLoai().getMaTL());
			String tinhTrang, huHong, ngungKinhDoanh;
			if (d.getTinhTrang() == 0)
				tinhTrang = "Có sẵn";
			else if (d.getTinhTrang() == 1)
				tinhTrang = "Cho thuê";
			else
				tinhTrang = "Đặt hàng";

			if (d.getHuHong() == 0)
				huHong = "";
			else
				huHong = "Có";
			dm.addRow(new Object[] { d.getMaDia(), td.getTenTD(), tl.getTenTL(), tinhTrang, huHong });
		}

	}

	public void ChiTietDia() {
		int row = jTableDia.getSelectedRow();
		TableModel model = jTableDia.getModel();
		String maDia = model.getValueAt(row, 0).toString();
		dia = qldia.chiTietDia(maDia);
	}

	public void XoaDia(Dia d) {
		int hoi = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa " + d.getMaDia() + " không ?", "Chú ý",
				JOptionPane.YES_NO_OPTION);
		if (hoi == JOptionPane.YES_OPTION) {
			DefaultTableModel dm = (DefaultTableModel) jTableDia.getModel();
			if (jTableDia.getRowCount() == 1)
				dm.removeRow(0);
			try {
				qldia.delete(d.getMaDia());
				DocDuLieuDatabaseVaoTable("");
				JOptionPane.showMessageDialog(null, "Xóa thành công ");
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				JOptionPane.showMessageDialog(null, "Đĩa không thể xóa");
				DocDuLieuDatabaseVaoTable("");
			}
		}
	}

	public static void setData(TaiKhoan tk_sql) {
		tk = tk_sql;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnThem1;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnXoa;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableDia;
	private javax.swing.table.DefaultTableModel dm;

	private Dia_DAO qldia;
	private TieuDe_DAO qltd;
	private TheLoai_DAO qltl;
	private Dia dia;

	private Main main;
	private JTextField txtTim;

	public static TaiKhoan tk;
	// End of variables declaration//GEN-END:variables
}
