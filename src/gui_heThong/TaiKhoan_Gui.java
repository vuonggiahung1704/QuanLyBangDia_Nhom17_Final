package gui_heThong;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import dao.TaiKhoan_DAO;
import database.Database;
import entities.TaiKhoan;
import gui_main.Main;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JTextField;
import java.awt.Font;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nmrhu
 */
public class TaiKhoan_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form TaiKhoan
	 */
	public TaiKhoan_Gui() {

		initComponents();

		DocDuLieuDatabaseVaoTable("");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qltk = new TaiKhoan_DAO();

		jPanel2 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableTaiKhoan = new javax.swing.JTable();
		btnThem = new javax.swing.JButton();
		btnThem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				TaiKhoan_Dialog dialog = new TaiKhoan_Dialog(main, true);
				dialog.setLocationRelativeTo(main);
				dialog.quyen = 1;
				dialog.setVisible(true);
				dialog.setTitle("Thêm tài khoản");
			}
		});
		btnCapNhat = new javax.swing.JButton();
		btnCapNhat.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (tk == null) {
					JOptionPane.showMessageDialog(null, "Chọn tài khoản cần cập nhât");
				} else {
					TaiKhoan_Dialog dialog = new TaiKhoan_Dialog(main, true);
					dialog.setData(tk);
					dialog.setLocationRelativeTo(main);
					dialog.quyen = 2;
					dialog.setVisible(true);
					dialog.setTitle("Cập nhật tài khoản");
					tk = null;
				}
			}
		});
		btnTim = new javax.swing.JButton();
		btnXoa = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel2.setFont(new Font("Tahoma", Font.PLAIN, 28));
		jLabel1 = new javax.swing.JLabel();
		jLabel1.setFont(new Font("Tahoma", Font.PLAIN, 28));

		setBackground(new java.awt.Color(255, 255, 255));
		setPreferredSize(new java.awt.Dimension(1300, 650));

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));
		jPanel2.setLayout(new java.awt.BorderLayout());

		jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

		jTableTaiKhoan.setRowHeight(40);
		jTableTaiKhoan.setFont(new java.awt.Font("Times New Roman", 0, 26)); // NOI18N

		dm = new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Tên đăng nhập", "Mật khẩu", "Họ tên", "Email", "SDT", "Quyền hạn", "Truy cập" }) {
			boolean[] canEdit = new boolean[] { false, false, false, false, false,false,false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		};
		jTableTaiKhoan.setModel(dm);
		jTableTaiKhoan.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		jScrollPane1.setViewportView(jTableTaiKhoan);
		jTableTaiKhoan.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				tk = ChiTietTaiKhoan();
			}
		});
		jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

		btnThem.setBackground(new java.awt.Color(0, 153, 255));
		btnThem.setForeground(new java.awt.Color(255, 255, 255));
		btnThem.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\add_30px.png")); // NOI18N
		btnThem.setText("Thêm mới");

		btnCapNhat.setBackground(new java.awt.Color(255, 204, 51));
		btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
		btnCapNhat.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\edit_30px.png")); // NOI18N
		btnCapNhat.setText("Cập nhật");

		btnTim.setBackground(new java.awt.Color(0, 153, 255));
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\search_30px.png")); // NOI18N
		btnTim.setText("Tìm kiếm");
		btnTim.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String txt = txtTim.getText();
				DocDuLieuDatabaseVaoTable(txt);
			}
		});

		btnXoa.setBackground(new java.awt.Color(255, 51, 51));
		btnXoa.setForeground(new java.awt.Color(255, 255, 255));
		btnXoa.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\delete_30px.png")); // NOI18N
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				if (tk == null) {
					JOptionPane.showMessageDialog(null, "Chọn tài khoản cần xóa");
				} else {
					XoaTaiKhoan(tk);
					tk = null;
				}
			}
		});

		jLabel2.setForeground(new java.awt.Color(102, 102, 102));
		jLabel2.setText("/ Tài khoản");

		jLabel1.setForeground(new java.awt.Color(51, 153, 255));
		jLabel1.setText("Hệ Thống");
		
		txtTim = new JTextField();
		txtTim.setColumns(10);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(20)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createSequentialGroup()
							.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(jLabel2)
							.addContainerGap())
						.addGroup(layout.createSequentialGroup()
							.addGroup(layout.createParallelGroup(Alignment.LEADING)
								.addComponent(jPanel2, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 1254, Short.MAX_VALUE)
								.addGroup(layout.createSequentialGroup()
									.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, 361, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.RELATED)
									.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(ComponentPlacement.RELATED, 264, Short.MAX_VALUE)
									.addComponent(btnThem, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
									.addGap(10)
									.addComponent(btnCapNhat, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)
									.addGap(10)
									.addComponent(btnXoa, GroupLayout.PREFERRED_SIZE, 150, GroupLayout.PREFERRED_SIZE)))
							.addGap(26))))
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(10)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
							.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
						.addComponent(btnThem, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
						.addComponent(btnCapNhat)
						.addComponent(btnXoa))
					.addPreferredGap(ComponentPlacement.UNRELATED)
					.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, 283, GroupLayout.PREFERRED_SIZE)
					.addGap(233))
		);
		this.setLayout(layout);
	}
	

	public void DocDuLieuDatabaseVaoTable(String txt) {
		dm = (DefaultTableModel) jTableTaiKhoan.getModel();
		dm.setRowCount(0);
		
		List<TaiKhoan> list = new ArrayList<TaiKhoan>();
		qltk = new TaiKhoan_DAO();
		
		if(txt.equals(""))
			list = qltk.dsTaiKhoan();
		else
			list = qltk.tim_TaiKhoan(txt);
		
		if(list.size() == 0) {
			JOptionPane.showMessageDialog(this, "Không tìm thấy");
		}else {
			for (TaiKhoan tk : list) {
				String quyen, truyCap;
				if (tk.getQuyen() == 0)
					quyen = "Quản lý";
				else
					quyen = "Nhân viên";

				if (tk.getTruyCap() == 1)
					truyCap = "Có";
				else
					truyCap = "Không";
				dm.addRow(new Object[] { tk.getTenTK(), tk.getMatKhau(), tk.getHoTen(), tk.getEmail(), tk.getSdt(),
						quyen, truyCap });
			}
		}
	}

	public TaiKhoan ChiTietTaiKhoan() {
		int row = jTableTaiKhoan.getSelectedRow();
		TableModel model = jTableTaiKhoan.getModel();
		String tenTK = model.getValueAt(row, 0).toString();
		TaiKhoan tk = qltk.chiTietTaiKhoan(tenTK);
		return tk;
	}

	
	public void XoaTaiKhoan(TaiKhoan tk) {
		int hoi = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn xóa " + tk.getTenTK() + " không ?", "Chú ý",
				JOptionPane.YES_NO_OPTION);
		if (hoi == JOptionPane.YES_OPTION) {
			DefaultTableModel dm = (DefaultTableModel) jTableTaiKhoan.getModel();
			if (jTableTaiKhoan.getRowCount() == 1)
				dm.removeRow(0);
			try {
				qltk.delete(tk.getTenTK());
				DocDuLieuDatabaseVaoTable("");
				JOptionPane.showMessageDialog(null, "Xóa thành công");
			} catch (SQLException e) {
				JOptionPane.showMessageDialog(null, "Tài khoản không thể xóa");
				DocDuLieuDatabaseVaoTable("");
			}
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnCapNhat;
	private javax.swing.JButton btnThem;
	private javax.swing.JButton btnTim;
	private javax.swing.JButton btnXoa;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableTaiKhoan;
	private javax.swing.table.DefaultTableModel dm;

	private TaiKhoan tk;
	public static TaiKhoan_DAO qltk;
	private Main main;
	private JTextField txtTim;
	// End of variables declaration//GEN-END:variables
}
