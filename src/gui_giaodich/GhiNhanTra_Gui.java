/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui_giaodich;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JOptionPane;

import database.Database;
import entities.ChiTietPhieuDat;
import entities.ChiTietPhieuThue;
import entities.Dia;
import entities.PhiTreHan;
import entities.PhieuDat;
import entities.PhieuThue;
import entities.PhieuTra;
import entities.TaiKhoan;
import entities.TheLoai;
import entities.TieuDe;
import gui_baocao.BaoCao_Dia_Gui;
import gui_danhMuc.Dia_Gui;
import gui_main.Main;

import javax.swing.JButton;
import java.awt.Color;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import dao.CT_PhieuDat_DAO;
import dao.CT_PhieuThue_DAO;
import dao.Dia_DAO;
import dao.PhiTreHan_DAO;
import dao.PhieuDat_DAO;
import dao.PhieuThue_DAO;
import dao.PhieuTra_DAO;
import dao.TaiKhoan_DAO;
import dao.TheLoai_DAO;
import dao.TieuDe_DAO;

import java.awt.Dimension;
import java.awt.Font;

/**
 *
 * @author nmrhu
 */
public class GhiNhanTra_Gui extends javax.swing.JPanel {

	/**
	 * Creates new form GhiNhanTra_Gui
	 */
	public GhiNhanTra_Gui() {
		setSize(new Dimension(1274, 605));
		initComponents();
		
		clear();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		Database.getInstance().connect();
		qldia = new Dia_DAO();
		qlpt = new PhieuThue_DAO();
		qltd = new TieuDe_DAO();
		qltl = new TheLoai_DAO();
		qltk = new TaiKhoan_DAO();
		ql_ctpt = new CT_PhieuThue_DAO();
		qlptr = new PhieuTra_DAO();
		qldh = new PhieuDat_DAO();
		ql_ctpd = new CT_PhieuDat_DAO();
		ql_pth = new PhiTreHan_DAO();
		
		txtTim = new javax.swing.JTextField();
		txtTim.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel3 = new javax.swing.JLabel();
		jLabel3.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel4 = new javax.swing.JLabel();
		jLabel4.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel5 = new javax.swing.JLabel();
		jLabel5.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtMaDia = new javax.swing.JTextField();
		txtMaDia.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtTieuDe = new javax.swing.JTextField();
		txtTieuDe.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel7 = new javax.swing.JLabel();
		jLabel7.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel8 = new javax.swing.JLabel();
		jLabel8.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtMaPt = new javax.swing.JTextField();
		txtMaPt.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtNgayThue = new javax.swing.JTextField();
		txtNgayThue.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btnTim = new javax.swing.JButton();
		txtQuaHan = new javax.swing.JTextField();
		txtQuaHan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel13 = new javax.swing.JLabel();
		txtPhatQuaHan = new javax.swing.JTextField();
		txtPhatQuaHan.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel14 = new javax.swing.JLabel();
		jLabel14.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel15 = new javax.swing.JLabel();
		txtPhatHuHong = new javax.swing.JTextField();
		txtPhatHuHong.setFont(new Font("Tahoma", Font.PLAIN, 20));
		cbbHuHong = new javax.swing.JComboBox<>();
		cbbHuHong.setFont(new Font("Tahoma", Font.PLAIN, 20));
		btnLuu = new javax.swing.JButton();
		jLabel16 = new javax.swing.JLabel();
		jLabel16.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel17 = new javax.swing.JLabel();
		jLabel17.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtThanhTien = new javax.swing.JTextField();
		txtThanhTien.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtNgayTra = new javax.swing.JTextField();
		txtNgayTra.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel18 = new javax.swing.JLabel();
		jLabel18.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtHanTra = new javax.swing.JTextField();
		txtHanTra.setFont(new Font("Tahoma", Font.PLAIN, 20));
		jLabel19 = new javax.swing.JLabel();
		jLabel19.setFont(new Font("Tahoma", Font.PLAIN, 20));
		txtNguoiLap = new javax.swing.JTextField();
		txtNguoiLap.setFont(new Font("Tahoma", Font.PLAIN, 20));

		setBackground(new java.awt.Color(255, 255, 255));

		jLabel3.setText("Mã đĩa:");

		jLabel4.setText("Tiêu đề:");

		jLabel5.setText("Quá hạn:");

		txtMaDia.setEditable(false);
		txtTieuDe.setEditable(false);

		jLabel7.setText("Mã PT:");

		jLabel8.setText("Ngày thuê:");

		txtMaPt.setEditable(false);

		txtNgayThue.setEditable(false);

		btnTim.setBackground(new java.awt.Color(51, 153, 255));
		btnTim.setForeground(new java.awt.Color(255, 255, 255));
		btnTim.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\search_30px.png")); // NOI18N
		btnTim.setText("Tìm kiếm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				String maDia = txtTim.getText().toString();
				if (maDia.equals(""))
					JOptionPane.showMessageDialog(null, "Vui lòng nhập mã đĩa");
				else {
					if (check_maDia(maDia)) {
						if (check_tinhTrangDia(maDia)) {
							getPhieuThue(maDia);
						} else {
							clear();
							JOptionPane.showMessageDialog(null, "Đĩa có sẵn ở cửa hàng");
						}
					} else {
						clear();
						JOptionPane.showMessageDialog(null, "Mã đĩa '"+ maDia +"' không tồn tại");
					}
				}
			}
		});

		txtQuaHan.setEditable(false);

		jLabel13.setText("Tiền phạt:");

		txtPhatQuaHan.setEditable(false);

		jLabel14.setText("Hư hỏng:");

		jLabel15.setText("Tiền phạt:");

		txtPhatHuHong.setEditable(false);

		cbbHuHong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Không", "Có" }));
		cbbHuHong.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				setHuHong_Cbx();
			}
		});
		
		btnLuu.setBackground(new java.awt.Color(51, 153, 255));
		btnLuu.setForeground(new java.awt.Color(255, 255, 255));
		btnLuu.setIcon(
				new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\DemoGui\\img\\save_30px.png")); // NOI18N
		btnLuu.setText("Ghi nhận trả");
		btnLuu.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				ThemPhieuTra();
				clear();
			}
		});

		jLabel16.setText("Tiền phí:");

		jLabel17.setText("Ngày trả:");

		txtThanhTien.setEditable(false);

		txtNgayTra.setEditable(false);

		jLabel18.setText("Hạn trả:");

		txtHanTra.setEditable(false);

		jLabel19.setText("Người lập:");

		txtNguoiLap.setEditable(false);
		
		JButton btnBack2 = new JButton();
		btnBack2.setBackground(new java.awt.Color(255, 255, 255));
        btnBack2.setIcon(new javax.swing.ImageIcon("D:\\HK1_Nam_4\\XayDungPhanMem\\Netbeans\\QuanLy\\img\\icons8-back-arrow-30.png")); // NOI18N
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		layout.setHorizontalGroup(
			layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(layout.createSequentialGroup()
					.addGap(29)
					.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
						.addComponent(jLabel18, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel8, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
						.addComponent(jLabel7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.TRAILING)
						.addComponent(txtHanTra, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
						.addComponent(txtNgayThue, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
						.addComponent(txtMaPt, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
						.addComponent(txtTieuDe, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
						.addGroup(layout.createSequentialGroup()
							.addComponent(txtTim, GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
							.addPreferredGap(ComponentPlacement.RELATED)
							.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
						.addComponent(txtMaDia, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE))
					.addPreferredGap(ComponentPlacement.UNRELATED, 46, Short.MAX_VALUE)
					.addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
						.addComponent(jLabel16, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel14, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel17, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jLabel19, GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
					.addPreferredGap(ComponentPlacement.RELATED)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addComponent(txtNguoiLap, GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
						.addComponent(btnBack2, Alignment.TRAILING)
						.addComponent(btnLuu, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
						.addComponent(txtNgayTra, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
						.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
							.addComponent(txtQuaHan, GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
							.addGap(20)
							.addComponent(jLabel13, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
							.addGap(10)
							.addComponent(txtPhatQuaHan, GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
						.addGroup(Alignment.TRAILING, layout.createSequentialGroup()
							.addComponent(cbbHuHong, 0, 122, Short.MAX_VALUE)
							.addGap(20)
							.addComponent(jLabel15, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
							.addGap(10)
							.addComponent(txtPhatHuHong, GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
						.addComponent(txtThanhTien, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE))
					.addContainerGap())
		);
		layout.setVerticalGroup(
			layout.createParallelGroup(Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
					.addGap(30)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtTim, GroupLayout.PREFERRED_SIZE, 30, GroupLayout.PREFERRED_SIZE)
							.addComponent(btnTim, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
						.addComponent(btnBack2, GroupLayout.PREFERRED_SIZE, 39, GroupLayout.PREFERRED_SIZE))
					.addGap(20)
					.addGroup(layout.createParallelGroup(Alignment.BASELINE)
						.addComponent(jLabel3)
						.addComponent(txtNguoiLap, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel19)
						.addComponent(txtMaDia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(24)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtTieuDe, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel4))
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtNgayTra, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel17)))
					.addGap(24)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtQuaHan, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel5))
						.addComponent(jLabel13)
						.addComponent(txtPhatQuaHan, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(txtMaPt, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel7))
					.addGap(24)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtNgayThue, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel8))
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(cbbHuHong, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel14))
						.addComponent(jLabel15)
						.addComponent(txtPhatHuHong, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
					.addGap(24)
					.addGroup(layout.createParallelGroup(Alignment.LEADING)
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtThanhTien, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel16))
						.addGroup(layout.createParallelGroup(Alignment.BASELINE)
							.addComponent(txtHanTra, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
							.addComponent(jLabel18)))
					.addGap(18)
					.addComponent(btnLuu)
					.addContainerGap(232, Short.MAX_VALUE))
		);
		this.setLayout(layout);
	}

	private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {
        pt.dsPhieuTra(tk);
    }
	
	public boolean check_maDia(String maDia) {
		Dia d = qldia.chiTietDia(maDia);
		if (d == null)
			return false;
		return true;
	}

	public boolean check_tinhTrangDia(String maDia) {
		Dia d = qldia.chiTietDia(maDia);
		if (d.getTinhTrang() == 1)
			return true;
		return false;
	}

	public void getPhieuThue(String maDia) {
		PhieuThue pt = qlpt.timPhieuThue_DiaThue_GanNhat(maDia);
		dia = qldia.chiTietDia(maDia);
		TieuDe td = qltd.chiTietTieuDe(dia.getTieuDe().getMaTD());
		tl = qltl.chiTietTheLoai(dia.getTheLoai().getMaTL());

		txtMaDia.setText(maDia);
		txtTieuDe.setText(td.getTenTD());
		txtMaPt.setText(pt.getMaPT());
		txtNgayThue.setText(pt.getNgayThue());

		ChiTietPhieuThue ctpt = ql_ctpt.getCTPT_TheoPT_Dia(pt.getMaPT(), maDia);
		txtHanTra.setText(ctpt.getHanTra());

		String quaHan = "";
		java.util.Date hanTra;
		try {
			hanTra = new SimpleDateFormat("yyyy-MM-dd").parse(txtHanTra.getText());

			long millis = System.currentTimeMillis();
			java.sql.Date ngayHienTai = new java.sql.Date(millis);
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			String ngay = sdf.format(ngayHienTai);
			java.util.Date ngayHienTai_date = new SimpleDateFormat("yyyy-MM-dd").parse(ngay);
			txtNgayTra.setText(ngay + "");
			if (ngayHienTai_date.compareTo(hanTra) == 0) {
				quaHan = "Không";
			} else if (ngayHienTai_date.before(hanTra)) {
				quaHan = "Không";
			} else {
				quaHan = "Có";
			}
			txtQuaHan.setText(quaHan);
			int phatQuaHan = 0;
			if (quaHan.equalsIgnoreCase("Có"))
				phatQuaHan = tl.getGiaPhat();

			txtPhatQuaHan.setText("" + phatQuaHan);
			txtThanhTien.setText("" + phatQuaHan);
		} catch (ParseException e) {
		}
	}

	public void ThemPhieuTra() {
		String maPT = txtMaPt.getText().toString();
		String maDia = txtMaDia.getText().toString();
		String ngayTra = txtNgayTra.getText().toString();
		int quaHan,huHong;
		if(txtQuaHan.getText().equals("Có"))
			quaHan = 1;
		else
			quaHan = 0;
		
		String huHong_string = cbbHuHong.getSelectedItem().toString();
		if(huHong_string.equals("Có"))
			huHong = 1;
		else
			huHong = 0;
		
		PhieuTra ptr = new PhieuTra(new PhieuThue(maPT), new Dia(maDia), ngayTra, tk ,quaHan ,huHong);
		qlptr.themPhieuTra(ptr);
		qldia.capNhatTinhTrangDia(0, maDia);
		qldia.capNhatTinhTrangHuHong(huHong, maDia);
		JOptionPane.showMessageDialog(null, "Ghi nhận trả thành công");
		pt.ds_PhieuTra_pn.DocDuLieuDatabaseVaoTable("", 0);
		
		int phatQuaHan = Integer.parseInt(txtPhatQuaHan.getText().toString());
		int phatHuHong = Integer.parseInt(txtPhatHuHong.getText().toString());
		int tongTien = Integer.parseInt(txtThanhTien.getText().toString());
		
		if(tongTien > 0) {
			String maPTr = qlptr.getMaPhieuDat();
			PhiTreHan pth = new PhiTreHan(new PhieuTra(maPTr), phatQuaHan, phatHuHong, tongTien, 0, 0);
			ql_pth.themPhiTreHan(pth);
		}
		
		Dia d = qldia.chiTietDia(maDia);
		PhieuDat dh = qldh.phieuDat_TieuDe_SomNhat(d.getTieuDe().getMaTD());
		
		if(dh != null) {
			ChiTietPhieuDat ctpd = new ChiTietPhieuDat(dh, d, 0);
			ql_ctpd.them_CTPD(ctpd);
			qldia.capNhatTinhTrangDia(2, d.getMaDia());
			qldh.update_tinhTrang(1, ctpd.getPhieuDat().getMaDH());
			main.datHang_pn = new DatHang_Gui();
			JOptionPane.showMessageDialog(null, "Đã có đơn đặt hàng thành công! Nhân viên vui lòng xem lại danh sách đặt hàng");
		}		
		main.dia_pn = new Dia_Gui();
		main.traCuu_pn = new TraCuu_Dia_Gui();
		main.datHang_pn = new DatHang_Gui();
		main.bcDia_pn = new BaoCao_Dia_Gui();
		main.phieuThue_pn.LapPhieu_pn.DocDuLieuDatabaseVaoTable("", "", 0);
	}

	public void setHuHong_Cbx() {
		if (tl != null) {
			int phatHuHong = 0;
			String huHong = cbbHuHong.getSelectedItem().toString();
			if (huHong.equalsIgnoreCase("Có"))
				phatHuHong = tl.getGiaDenBu();
			else
				phatHuHong = 0;
			int phatQuaHan = Integer.parseInt(txtPhatQuaHan.getText().toString());
			int thanhTien = phatHuHong + phatQuaHan;
			txtPhatHuHong.setText("" + phatHuHong);
			txtThanhTien.setText("" + thanhTien);
		}
	}

	public void clear() {
		txtTim.setText("");		
		txtMaDia.setText("");
		txtTieuDe.setText("");
		txtMaPt.setText("");
		txtHanTra.setText("");
		txtNgayThue.setText("");
		if(tk!=null)
			txtNguoiLap.setText(tk.getHoTen());
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		String date = sdf.format(new Date());
		txtNgayTra.setText(date);
		cbbHuHong.setSelectedItem("Không");
		txtQuaHan.setText("");
		txtPhatHuHong.setText("0");
		txtPhatQuaHan.setText("0");
		txtThanhTien.setText("0");
		
	}
	
	public static void setData(TaiKhoan tk_sql) {
    	if(!(tk_sql == null)) {
			tk = tk_sql;
			txtNguoiLap.setText(tk.getHoTen());
		}
    }
	
	private PhieuTra_Gui pt;
	
	private javax.swing.JButton btnLuu;
	private javax.swing.JButton btnTim;
	private javax.swing.JComboBox<String> cbbHuHong;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel19;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JTextField txtHanTra;
	private javax.swing.JTextField txtMaDia;
	private javax.swing.JTextField txtMaPt;
	private javax.swing.JTextField txtNgayThue;
	private javax.swing.JTextField txtNgayTra;
	public static javax.swing.JTextField txtNguoiLap;
	private javax.swing.JTextField txtPhatHuHong;
	private javax.swing.JTextField txtPhatQuaHan;
	private javax.swing.JTextField txtQuaHan;
	private javax.swing.JTextField txtThanhTien;
	private javax.swing.JTextField txtTieuDe;
	private javax.swing.JTextField txtTim;

	private Dia_DAO qldia;
	private PhieuThue_DAO qlpt;
	private TieuDe_DAO qltd;
	private TheLoai_DAO qltl;
	private PhieuTra_DAO qlptr;
	private TaiKhoan_DAO qltk;
	private CT_PhieuThue_DAO ql_ctpt;
	private PhieuDat_DAO qldh;
	private CT_PhieuDat_DAO ql_ctpd;
	private PhiTreHan_DAO ql_pth;
	
	private Dia dia;
	private TheLoai tl;
	
	private Main main;
	
	public static TaiKhoan tk;
}
